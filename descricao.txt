Eu estava pensando o sistema de acordo com os papéis dos funcionários, quando percebi que, em alguns restaurantes, o garçom quem cobra a conta, já em outros, tem um atendente para isso. Então pensei em não separar os tipos de funcionários, mas as funções deles
No caso, os funcionários poderiam ter as funções:
   - Cadastrar pedidos
   - Cancelar pedidos
   - Preparar pedidos
   - Cobrar pedidos
Daí o dono quem atribuiria as funções a eles
-------------------------------------------------
Modelagem do Banco
	pratos
		campos
			id
			nome
			preco

	pedidos_pratos
		campos
			id_pedido
			id_prato

	pedidos
		campos
			id
			mesa (string)
			descricao
			id_status (int)
			data_do_pedido (datatime)

		tipos de estados
			cadastrado
			cancelado
			preparando
			entregue
			finalizado

	status_pedido
		campos
			id_status
			nome

	usuarios
		campos
			id
			email
			nome
			senha

	permissoes
		campos
			id
			descricao

		exemplos de permissões
			cadastrar pedidos
			cancelar pedidos
			preparar pedidos
			cobrar pedidos

	usuarios_permissoes
		campos
			id_user
			id_permissao

Telas
	anonimo
		Cadastro
		Login
		About

	funcionario
		Cadastrar Pedido
		Lista de Pedido (registrar ação)
		Logout

	dono
		Cadastrar Funcionário
		*Cadastrar Pratos
		*Listar Pratos (editar/remover)
		*Receitas
		*Logs
		Logout

Consultas
	Metódo: POST
	Rota: api/cadastro
	Parametros: Usuario

	Metódo: POST
	Rota: api/login
	Parametros: Usuario

	Metódo: GET
	Rota: api/pedido/listar
	Parametros: ?status

	Metódo: POST
	Rota: api/pedido/cadastrar
	Parametros: Pedido

	Metódo: PUT
	Rota: api/pedido/editar
	Parametros: Pedido

	Metódo: DELETE
	Rota: api/pedido/deletar
	Parametros: Pedido
-------------------------------------------------
Requisitos
	Área administrativa para gerenciar usuários
	Rotas protegidas
	Login/Logout
	Montar as telas/menus do sistema de acordo com permissões
	CRUD
	Busca
	Relatório
	Logs
	Fedback de erros e sucesso ao usário
	Validação de formulário frontend
	Validação de formulário backend
	Responsividade